name: Run Repository Tests
on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
        
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: 'projects/959426188245/locations/global/workloadIdentityPools/github-action-pool-1/providers/github-action-provider-1'
          service_account: 'artifact-repository-access@roomr-222721.iam.gserviceaccount.com'
      
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.0
      
      - name: Terraform Init
        id: init
        run: terraform init    
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var="project_id"=roomr-222721 -var="db_pass"=root
        continue-on-error: true
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terraform Apply
        run: terraform apply -auto-approve -var="project_id"=roomr-222721 -var="db_pass"=root
      
      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install alembic
          pip install aiomysql
         
      - name: Run Test
        run: |
          gcloud iam service-accounts keys create ./models/static/ServiceAccount.json --iam-account=firebase-adminsdk-rbs1y@roomr-222721.iam.gserviceaccount.com
         
          PUBLIC_IP=$(gcloud compute instances describe mysql-test-instance-1 --zone=us-central1-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
          echo $PUBLIC_IP

          docker build --build-arg HOST=$PUBLIC_IP -t sneyd321/lease-service .
          
          alembic revision --autogenerate
          alembic upgrade head
          docker compose run lease-service pytest tests/test_repository.py
      
      - name: Terraform Destroy
        if: always()
        run: terraform destroy -auto-approve -var="project_id"=roomr-222721 -var="db_pass"=root
      - name: Delete Service Account Key
        if: always()
        run: |
          python models/static/remove_key.py
